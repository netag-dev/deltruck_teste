# Configurações gerais
#
FLASK_APP=run.py
FLASK_ENV=testing
# ou 'development','testing', 'staging', 'production'
PORT=5001

# Configurações do banco de dados
#
DATABASE_URI_LOCAL_DEV="sqlite:///:memory:" 
DATABASE_URI_LOCAL_TEST="postgresql://postgres:postgres@localhost:5432/deltruck_teste"
DATABASE_URI_REMOTE_STAGING="postgresql://postgres:Angola2023#@95.216.215.24:5432/deltruck_staging?sslmode=disable"
DATABASE_URI_REMOTE_PROD="postgresql://postgres:Angola2023#@95.216.215.24:5432/deltruck_prod?sslmode=disable"
DATABASE_SCHEMA="deltruck"

# Configurações do Redis-Render (Descomentar para ambientes staging/prod)
#
#REDIS_HOST=r
#REDIS_PORT=6379
#REDIS_DB=0
#REDIS_PASSWORD=my-secret-password

# Configurações da API
#
BASE_API_URL="/deltruck/api/v1"
CORS_ORIGINS="http://127.0.0.1:5500,http://localhost:5001,http://localhost:4200"

# Configurações do cache
#
# TTL (Time To Live) do cache em segundos (10 minutos)
CACHE_DEFAULT_TIMEOUT=600 
# Tempo de expiração do cache em dias
CACHE_TIMEOUT_DAYS=1  

# Expiração do acess token JWT em segundos(15min)
JWT_ACCESS_TOKEN_EXPIRES=900
# Expiração do refresh token JWT em segundos(1dia)
JWT_REFRESH_TOKEN_EXPIRES=86400

# Configurações de serviço de email
#
# MAIL_SERVER = "smtp.example.com"
# MAIL_PORT = 587  # Porta comum para TLS
# MAIL_USE_TLS = True
# MAIL_USE_SSL = False
# MAIL_USERNAME = "user@example.com"
# MAIL_PASSWORD = "example_password"
# MAIL_DEFAULT_SENDER = "no-reply@example.com"

# Chaves de Segurança:
#
# Flask
# - 'SECRET_KEY': Para proteger sessões e dados criptografados.
# Token JWT
# - Chave Simetrica:
#     - 'JWT_SECRET_KEY': Para Assinar e Verificar Tokens JWT
# - Chave Assimétricas:
#     - 'JWT_PRIVATE_KEY': Chave Privada para Assinatura do Tokens JWT
#     - 'JWT_SECRET_KEY':  Chave Pública para Verificação da Assinatura do Tokens JWT
SECRET_KEY='245066184d1b0c176ab080ea19ddb0d4154f05c783ad9b67e408027c7cc2aeb4'
JWT_PRIVATE_KEY='-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEAyZBJF7Nytd3L68iyAPKca3GyOSnZMBkEYgtflk1jawLwk00X
ndOEimQL8pNRRWqoiTAXV2KP+cVM2ETD5YT2tuQ14s9pY76Bu1zZfCK2AVpMqis2
2zFbv877hyM9dhrRWXYWWZr9ntScZ6bxpnTwE8ZDUyq6CyYJVWt6rBvClGo0jbLg
3TL0BlS+u/TrqHtCjQfENwwVLt5NBwigC3kiYwm/QrPkJz0bU55yEdAYhhoJU31u
aQH4LM2fVLlTBoCvETkdgbKw3/J9nnbf2zFfd/S7Rhwe5oTlqRJelOCLm6U+ey4s
j7D0f0GQ9O5xgXaRy4UzWHK2RSNV2cDmOcT8bQIDAQABAoIBAATTqRxuYxHXdOAT
MOGnunbMOANfoC084odih4oQe/ZlEW1fMqPITx7Trhsp/sLVy6FomGmysrxXE2cE
01gct54oZHrA+S1QgGGdo8ulA4zDiwOlzOBLR0vJlIM0JQjXml0B4FK9Zm0DFGSO
Pkn8Xn9quqDN0u5PakVnl7FyNlYNeUl6enhgNwtFRO9ltnKQgavZGmun45COVDAV
D641vA8arPYzhh81Vtj9gOUYTQn2sqVfCOYTlaX49+yPFGIyeoQtc7aFYmePgzT4
1ASP+zkmyTCKLtFBz/UDaL3CeLIACvig7IsE+ZpdArXiEm98M2NzW5d8Ao4KKQx0
mLS+aOECgYEA/jmdCIvz6rdqwZfq9xGIAsGwL2978R1sU4x+lCo0g0ZtasmuZ/kA
x/wI+xNk3Hh7shvgilZ9qwXwMfBJ+OIEHvNen084xgCdELPmhXQY29t8IVEUUcPX
+XZA/HTfbMHUd18DEXWrt2hGhx45Mz2HWHNFKKktyeyTPM6mCXNE7mUCgYEAyviM
V+7vuW5P+GZB9qHi/yQdsfO3zumQQjps2qOKhfwpF2u6wZUv0ksYy311CFVvId2n
zvqnteoNG5VWb9MtdsqR23kwZTBBK9mxC0Iyvv9rAb76I4y7JPXAXGvBTJPx9gL3
mOikJWozug7S8bySZZtmI7uiJ/EX9kvbJ3YYkWkCgYBhb3duNSWRSicSd8VIWGHG
nLGIHLRmHx7LjsdcxihGQBHjodTEaL0R6NkQUciQb2UJSIHww2F60NXUbgIL76Qg
sKoNaPGbgdSw+CJb97knWqHiqw6cn/EA3X/ewnR3XHqwHawxXuYnb0HIu560stpS
3isdgGnaQF/WKGWerZ03uQKBgCdGCpnlMNuXfb/ZwX/AeVTXHyvUtcdCqFg4R+HS
bTZZwXW3sa5NeLBfOY/+WYvgRB2wbwz8sUDg5eJldhEzMoPe1HQ8MeISgTnD6J7+
EyWj9Iek9W+1hmyzZKI9c2ym39WzY0diFIjs0M96mNSPoWApvozBfLHv06wjp2cu
UbipAoGAIX5Jh2HePy/edVcJrUsEROG0F4uph6svF29jEqd8gNqBe6FwFDEr/u3z
tVXh/gAy8Ds+XPib3W7sD3+jGiKO7nHbvWBEsgct/8lNR2TPpSOPwMTKeenY0pfM
S8ehKCHD15fChcD1ol9Iedzee71VuJugCwYECPgEBHW7NWf8icA=
-----END RSA PRIVATE KEY-----
'
JWT_PUBLIC_KEY='-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAyZBJF7Nytd3L68iyAPKc
a3GyOSnZMBkEYgtflk1jawLwk00XndOEimQL8pNRRWqoiTAXV2KP+cVM2ETD5YT2
tuQ14s9pY76Bu1zZfCK2AVpMqis22zFbv877hyM9dhrRWXYWWZr9ntScZ6bxpnTw
E8ZDUyq6CyYJVWt6rBvClGo0jbLg3TL0BlS+u/TrqHtCjQfENwwVLt5NBwigC3ki
Ywm/QrPkJz0bU55yEdAYhhoJU31uaQH4LM2fVLlTBoCvETkdgbKw3/J9nnbf2zFf
d/S7Rhwe5oTlqRJelOCLm6U+ey4sj7D0f0GQ9O5xgXaRy4UzWHK2RSNV2cDmOcT8
bQIDAQAB
-----END PUBLIC KEY-----
'
